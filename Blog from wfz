# 结对编程作业2

[TOC]

| 这个作业属于哪个课程 | [Fzusdn](https://bbs.csdn.net/forums/fzusdn) |
| ----------------- |--------------- | 
| 这个作业要求在哪里| [2022秋软工实践 第二次结对编程作业](https://bbs.csdn.net/topics/608425848) | 
| 这个作业的目标 |按照要求对点名算法进行数据生成和设计 |
| 学号 | 032004125 |
| 队友学号 | 032004103 |


## Github 仓库

[生病了的PPEIP & Tohsakasaikou的仓库](https://github.com/Tohsakasaikou/attendancesystem)

* 结果实例


<img src=https://img-blog.csdnimg.cn/6b85219376b94faa8b35c7f46e6e82b3.png>

## 设计背景

栋哥对大家第一次结对编程作业的原型设计感到很满意，为了尽快让同学们使用上软件，于是栋哥花一晚上时间开发了一个点名小程序。但是在上线运行过后，发现了一些问题：

>- 大多数老师习惯在每次上课后或下课前的一小段时间内进行点名。
>- 如果采用全点的方式，在这段时间里，后端服务器需要处理大量的请求，拥塞导致响应速度变慢，给点名小程序带来极差的使用体验。
>- 采用随机抽点的方式，能够有效减少并发量，但是无法保证点名的质量，难以有效抓出没有到教室的同学。

所以栋哥急需大家设计一个算法来解决这个问题，要求能够最小化向后端发送的请求次数，最大化抓出缺勤同学的数量。

## 算法设想

参考自 [大学生“逃课”的调查与分析](https://m.fx361.com/news/2017/0407/1463608.html) , 文章指出：
>- 有很多学生认为，逃课对课程成绩的影响很小，甚至没有影响.对于注重学习成绩的我国学生来说，这一现象无疑是危险的，甚至会让学生有课堂学习不重要、理性逃课自习收获更大的错觉。

由此我们小组猜测学习成绩会与逃课情况存在一定关联,而逃课情况会反映在点名情况里，所以我们假设绩点和点名情况存在联系。



## 参数定义

>- 请求次数：定义在一次点名中，获取一位同学是否到达课堂的情况为一次请求。
>- 有效点名：一位同学缺席该课程的一次课，算法在这次课上抽点到该同学，视为一次有效点名，一次课可包含多次有效点名。

## 评分标准

<center><img src=https://img-community.csdnimg.cn/images/356ff1b0c7784764aebf5b62607adec0.png width = 55%></center>

可以看到，如果能做到越精准地点到缺勤的学生，E的值就越接近1。


## PSP表格 预估耗时 实际耗时

| PSP | Personal Software Process Stages | 预估耗时（分钟）  | 实际耗时（分钟） |
| ----------------- |--------------- |--------------- |--------------- |
| Planning    | 计划 | 120 | 100 |
| Estimate    | 估计这个任务需要多少时间 | 200 | 300 |
| Development | 开发 | 540  | 600  |
| Analysis	  | 需求分析 (包括学习新技术) | | |
| Design Spec | 生成设计文档 |  |  |
| Design Review | 设计复审 (和同事审核设计文档) |  |  |
| Coding Standard | 代码规范 (为目前的开发制定合适的规范 |   |   |
| Design | 具体设计 | 60 | 150  |
| Coding | 具体编码 | 240  |  360 |
| Code Review | 代码复审 | 120  |  60 |
| Test | 测试（自我测试，修改代码，提交修改） | 180  | 120  |
| Report | 报告 | 300  | 300  |
| Size Measurement |  计算工作量 |   |   |
| Postmortem & Process Improvement Plan | 事后总结, 并提出过程改进计划 | 60  | 60  |
|       | 合计 | 1820  | 2050  |

## 重点难点分析

>- 起步时，基本没有什么头绪，在查阅资料的过程中读过了不少相关文章、博客，才在一篇调查里找到了起步思路，也为我们后续算法实践，代码设计奠定了基础。与cb同学讨论、交流的过程中，发现其中有不少可挖掘的点。当时我们代码调试了一个早上，输出的E值一直很小，后面是发现我们有一个参数写错了😂。

>-  再者，算法的功能是机器学习，这对我们的代码能力，机器学习了解提出了考验，好在本学期有学习过相关课程，对该内容有一定的了解。如果先pca降维在kmeans，那么E的值应该会更准确（ ？）

>-  最后，这也是我们两个第一进行真正的合作编程，通过本次学习，我们学习到了commit的规范（当时在机房一直ping不上github.com又查了半天资料 ~~当时卡了我一个小时~~），还有如何书写代码注释 ~~以免对方看不懂~~共同书写代码也是一次全新的、有意义的体现。

## 相关图片

 * 在宿舍讨论

<img src=https://img-blog.csdnimg.cn/d1ca59fc16ab4f60b71fefc28cc76e3e.jpeg width = 55%>

* commit记录

<img src=https://img-blog.csdnimg.cn/c6215d1589e447e0a4a0c1a2a6a1175f.png width = 55%>


## 结对感受以及两个人对彼此结对中的闪光点或建议的分享

#### 032004125
> cb的闪光点很多包括如下：
>- 1）代码能力比我强，很多时候他的代码执行力比我有效得多；
>- 2）为人随和，对我经常持有包容的态度，我问题不少，经常讨论时提出问题、提出质疑，cb桑都能不急不缓地回应讨论和解答；
>- 3）能提出很多建设性的建议，经常能够中和我们两人的想法然后给出一个合理的结论。

#### 032004103
> wfz的闪光点如下：
>- 1）思路清晰，逻辑合理，经常提出新的想法思路，对我们的算法设计推进经常有很大的帮助；
>- 2）经常搜集资料，本次设计的假设就是由他找到并提出的，并且作为我们的算法设计基础；
>- 3）敢说敢做，整理能力强，本次实验的测试和事后总结他出了很大一份力。
